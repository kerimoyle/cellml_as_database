# Generated by Django 2.2.3 on 2019-07-08 15:14
from django.db import migrations

standard_unit_list = [
    ["ampere", [["ampere", 1.0]]],
    ["candela", [["candela", 1.0]]],
    ["dimensionless", [["dimensionless", 1.0]]],
    ["kelvin", [["kelvin", 1.0]]],
    ["kilogram", [["kilogram", 1.0]]],
    ["metre", [["metre", 1.0]]],
    ["mole", [["mole", 1.0]]],
    ["second", [["second", 1.0]]],

    ["becquerel", [["second", -1.0]]],
    ["coulomb", [["ampere", -1.0], ["second", 1.0]]],
    ["farad", [["ampere", 2.0], ["kilogram", -1.0], ["metre", -2.0], ["second", -4.0]]],
    ["gram", [["kilogram", 1.0]]],
    ["gray", [["metre", 2.0], ["second", -2.0]]],
    ["henry", [["ampere", -2.0], ["kilogram", 1.0], ["metre", 2.0], ["second", -2.0]]],
    ["hertz", [["second", -1.0]]],
    ["joule", [["kilogram", 1.0], ["metre", 2.0], ["second", -2.0]]],
    ["katal", [["mole", 1.0], ["second", -1.0]]],
    ["litre", [["metre", 3.0]]],
    ["lumen", [["candela", 1.0]]],
    ["lux", [["candela", 1.0], ["metre", -2.0]]],
    ["newton", [["kilogram", 1.0], ["metre", 1.0], ["second", -2.0]]],
    ["ohm", [["ampere", -2.0], ["kilogram", 1.0], ["metre", 2.0], ["second", -3.0]]],
    ["pascal", [["kilogram", 1.0], ["metre", -1.0], ["second", -2.0]]],
    ["radian", [["dimensionless", 1.0]]],
    ["siemens", [["ampere", 2.0], ["kilogram", -1.0], ["metre", -2.0], ["second", 3.0]]],
    ["sievert", [["metre", 2.0], ["second", -2.0]]],
    ["steradian", [["dimensionless", 1.0]]],
    ["tesla", [["ampere", -1.0], ["kilogram", 1.0], ["second", -2.0]]],
    ["volt", [["ampere", -1.0], ["kilogram", 1.0], ["metre", 2.0], ["second", -3.0]]],
    ["watt", [["kilogram", 1.0], ["metre", 2.0], ["second", -3.0]]],
    ["weber", [["ampere", -1.0], ["kilogram", 1.0], ["metre", 2.0], ["second", -2.0]]]
]

prefix_list = [
    ["yotta", 24],
    ["zetta", 21],
    ["exa", 18],
    ["peta", 15],
    ["tera", 12],
    ["giga", 9],
    ["mega", 6],
    ["kilo", 3],
    ["hecto", 2],
    ["deca", 1],
    ["", 0],
    ["deci", -1],
    ["centi", -2],
    ["milli", -3],
    ["micro", -6],
    ["nano", -9],
    ["pico", -12],
    ["femto", -15],
    ["atto", -18],
    ["zepto", -21],
    ["yocto", -24],
    ["24", 24],
    ["23", 23],
    ["22", 22],
    ["21", 21],
    ["20", 20],
    ["19", 19],
    ["18", 18],
    ["17", 17],
    ["16", 16],
    ["15", 15],
    ["14", 14],
    ["13", 13],
    ["12", 12],
    ["11", 11],
    ["10", 10],
    ["9", 9],
    ["8", 8],
    ["7", 7],
    ["6", 6],
    ["5", 5],
    ["4", 4],
    ["3", 3],
    ["2", 2],
    ["1", 1],
    ["0", 0],
    ["-1", -1],
    ["-2", -2],
    ["-3", -3],
    ["-4", -4],
    ["-5", -5],
    ["-6", -6],
    ["-7", -7],
    ["-8", -8],
    ["-9", -9],
    ["-10", -10],
    ["-11", -11],
    ["-12", -12],
    ["-13", -13],
    ["-14", -14],
    ["-15", -15],
    ["-16", -16],
    ["-17", -17],
    ["-18", -18],
    ["-19", -19],
    ["-20", -20],
    ["-21", -21],
    ["-22", -22],
    ["-23", -23],
    ["-24", -24]]


def add_standards(apps, schema_editor):
    Unit = apps.get_model('main', 'Unit')
    CompoundUnit = apps.get_model('main', 'CompoundUnit')
    Person = apps.get_model('main', 'Person')
    User = apps.get_model('auth', 'User')
    Prefix = apps.get_model('main', 'Prefix')

    for name, made_of in standard_unit_list:
        cu = CompoundUnit(name=name, is_standard=True)
        cu.save()
        for key, val in made_of:
            base = CompoundUnit.objects.filter(name=key).first()
            if base:
                u = Unit(exponent=val, base=base, units=cu, reference=key)
                u.save()

    for p in prefix_list:
        prefix = Prefix(name=p[0], value=p[1])
        prefix.save()

    user = User(username="admin")
    user.save()

    admin_person = Person(
        user=user,
        first_name="Admini",
        last_name="Strator",
        email="noEmail@noEmail.com",
    )
    admin_person.save()


def remove_standards(apps, schema_editor):
    Unit = apps.get_model('main', 'Unit')
    CompoundUnit = apps.get_model('main', 'CompoundUnit')
    Prefix = apps.get_model('main', 'Prefix')
    Person = apps.get_model('main', 'Person')
    User = apps.get_model('auth', 'User')

    for name, made_of in standard_unit_list:
        try:
            cu = CompoundUnit.objects.get(name=name, is_standard=True)

            for u in cu.units.all():
                u.delete()

            cu.delete()
        except:
            pass

    for p in prefix_list:
        try:
            prefix = Prefix.objects.get(name=p[0])
            prefix.delete()
        except:
            pass

    try:
        u = User.objects.get(username='admin')
        a = u.person
        a.delete()
        u.delete()
    except:
        pass


class Migration(migrations.Migration):
    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(code=add_standards, reverse_code=remove_standards),
    ]
